python write me a multi-armed bandit script for the following problem: 

from PBMM import data_mm, data_pb  # Import datasets from PBMM.py

Two datasets:
	data_mm (1000,4)
	data_pb (1000,4)
The datasets are the date of draw, 5w, 1r, and m for the jackpot prize.

The two datasets have the following columns:
	d -date
	w - an array of 5 ints
	r - int
	m - int

There are two machines, on each date they select the jackpot combination at random. Tickets are bought before draw date with the varing combinations of 5w, 1r.
	d - 1 per pull
	w - 5 per pull
	r - 1 per pull
	m - 1 per pull

Machines differ in the following ways:
data_mm:
	w = ints 1-69
	r = ints 1-26
	m = is 2,3,4, or 5

The goal is to get the highest prize with the following matches (Listed lowest reward to highest):
	r = $2;  odds 1 in 27
	1w+r = $4;  odds 1 in 89
	2w+r = $10;  odds 1 in 693
	3w = $10;  odds 1 in 606
	3w+r = $200;  odds 1 in 14547
	4w = $500;  odds 1 in 38,792
	4w+r = $10,000;  odds 1 in 931,001
	5w = $1,000,000;  odds 1 in 12,607,306
	5w+r = JACKPOT;  odds 1 in 302,575,350


data_pb:
	w = ints 1-70
	r = ints 1-25
	m = is 2,3,4, 5 or 10

The goal is to get the highest prize with the following matches (Listed lowest reward to highest):
	r = $4;  odds 1 in 38.32
	1w+r = $4;  odds 1 in 91.98
	2w+r = $7;  odds 1 in 701.33
	3w = $7;  odds 1 in 579.76
	3w+r = $100;  odds 1 in 14,494.11
	4w = $100;  odds 1 in 36,525.17
	4w+r = $50,000;  odds 1 in 913,129.18
	5w = $1,000,000;  odds 1 in 11,688,053.52
	5w+r = JACKPOT;  odds 1 in 292,201,338.00
